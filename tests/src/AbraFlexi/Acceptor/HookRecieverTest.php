<?php

namespace Test\AbraFlexi\Acceptor;

use AbraFlexi\Acceptor\HookReciever;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-06-21 at 09:52:50.
 */
class HookRecieverTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var HookReciever
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new HookReciever();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::listen
     * @todo   Implement testlisten().
     */
    public function testlisten() {
        $this->assertEquals('', $this->object->listen());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::saveWebhookData
     * @todo   Implement testsaveWebhookData().
     */
    public function testsaveWebhookData() {
        $this->assertEquals('', $this->object->saveWebhookData());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::processAbraFlexiChanges
     * @todo   Implement testprocessAbraFlexiChanges().
     */
    public function testprocessAbraFlexiChanges() {
        $this->assertEquals('', $this->object->processAbraFlexiChanges());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::takeChanges
     * @todo   Implement testtakeChanges().
     */
    public function testtakeChanges() {
        $this->assertEquals('', $this->object->takeChanges());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::saveLastProcessedVersion
     * @todo   Implement testsaveLastProcessedVersion().
     */
    public function testsaveLastProcessedVersion() {
        $this->assertEquals('', $this->object->saveLastProcessedVersion());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::getLastSavedVersion
     * @todo   Implement testgetLastSavedVersion().
     */
    public function testgetLastSavedVersion() {
        $this->assertEquals('', $this->object->getLastSavedVersion());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::lock
     * @todo   Implement testlock().
     */
    public function testlock() {
        $this->assertEquals('', $this->object->lock());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::locked
     * @todo   Implement testlocked().
     */
    public function testlocked() {
        $this->assertEquals('', $this->object->locked());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::isProcessRunning
     * @todo   Implement testisProcessRunning().
     */
    public function testisProcessRunning() {
        $this->assertEquals('', $this->object->isProcessRunning());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::isLocked
     * @todo   Implement testisLocked().
     */
    public function testisLocked() {
        $this->assertEquals('', $this->object->isLocked());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::unlock
     * @todo   Implement testunlock().
     */
    public function testunlock() {
        $this->assertEquals('', $this->object->unlock());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Acceptor\HookReciever::onlyFreshHooks
     * @todo   Implement testonlyFreshHooks().
     */
    public function testonlyFreshHooks() {
        $this->assertEquals('', $this->object->onlyFreshHooks());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

}
