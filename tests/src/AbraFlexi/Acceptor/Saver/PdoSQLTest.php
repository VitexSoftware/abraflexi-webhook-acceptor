<?php

declare(strict_types=1);

/**
 * This file is part of the MultiFlexi package
 *
 * https://github.com/VitexSoftware/abraflexi-webhook-acceptor
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi\Acceptor\Saver;

use AbraFlexi\Acceptor\Saver\PdoSQL;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-06-21 at 09:52:49.
 */
class PdoSQLTest extends \PHPUnit\Framework\TestCase
{
    protected PdoSQL $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new PdoSQL([]);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::setCompany
     */
    public function testsetCompany(): void
    {
        $this->object->setCompany('test');
        $this->assertEquals('test', $this->object->company);
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::getLastProcessedVersion
     *
     * @todo   Implement testgetLastProcessedVersion().
     */
    public function testgetLastProcessedVersion(): void
    {
        $this->assertEquals('', $this->object->getLastProcessedVersion());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::saveLastProcessedVersion
     *
     * @todo   Implement testsaveLastProcessedVersion().
     */
    public function testsaveLastProcessedVersion(): void
    {
        $this->assertEquals('', $this->object->saveLastProcessedVersion());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::sqlColsToJsonCols
     *
     * @todo   Implement testsqlColsToJsonCols().
     */
    public function testsqlColsToJsonCols(): void
    {
        $this->assertEquals('', $this->object->sqlColsToJsonCols());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::jsonColsToSQLCols
     *
     * @todo   Implement testjsonColsToSQLCols().
     */
    public function testjsonColsToSQLCols(): void
    {
        $this->assertEquals('', $this->object->jsonColsToSQLCols());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::saveWebhookData
     *
     * @todo   Implement testsaveWebhookData().
     */
    public function testsaveWebhookData(): void
    {
        $this->assertEquals('', $this->object->saveWebhookData());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::wipeCacheRecord
     *
     * @todo   Implement testwipeCacheRecord().
     */
    public function testwipeCacheRecord(): void
    {
        $this->assertEquals('', $this->object->wipeCacheRecord());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers \AbraFlexi\Acceptor\Saver\PdoSQL::locked
     *
     * @todo   Implement testlocked().
     */
    public function testlocked(): void
    {
        $this->assertEquals('', $this->object->locked());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}
